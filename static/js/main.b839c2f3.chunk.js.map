{"version":3,"sources":["components/navigation/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","useState","groups","setGroups","useEffect","axios","method","url","then","response","data","className","href","type","id","map","g","to","pathname","fromDashboard","name","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNAyCeA,MApCf,WAEI,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KAWA,OATAC,qBAAU,WACNC,IAAM,CACFC,OAAQ,MACRC,IAAK,oCACNC,MAAK,SAAAC,GACJN,EAAUM,EAASC,WAExB,IAGC,qBAAKC,UAAU,MAAf,SACI,sBAAKA,UAAU,gDAAf,UACI,mBAAGA,UAAU,eAAeC,KAAK,IAAjC,oBACA,wBAAQD,UAAU,iBAAiBE,KAAK,SAAS,iBAAe,WACxD,iBAAe,sBAAsB,gBAAc,qBACnD,gBAAc,QACd,aAAW,oBAHnB,SAII,sBAAMF,UAAU,0BAEpB,qBAAKA,UAAU,2BAA2BG,GAAG,qBAA7C,SACI,qBAAKH,UAAU,aAAf,SACKT,EAAOa,KAAI,SAAAC,GAAC,OACT,cAAC,OAAD,CAAML,UAAU,WACVM,GAAI,CAACC,SAAS,eAAD,OAAiBF,EAAEF,IAAMK,eAAe,GAD3D,SACoEH,EAAEI,oBChBnFC,MAXf,WAEI,OACI,qBAAKV,UAAU,MAAf,SACI,cAAC,gBAAD,UACI,cAAC,EAAD,SCEDW,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBhB,MAAK,YAAkD,IAA/CiB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b839c2f3.chunk.js","sourcesContent":["import React, {useState, useEffect} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport axios from 'axios';\nimport {Link} from 'react-dom';\n\nfunction Navbar() {\n\n    const [groups, setGroups] = useState([])\n\n    useEffect(() => {\n        axios({\n            method: \"GET\",\n            url: 'http://0.0.0.0:8000/api/groups/'\n        }).then(response => {\n            setGroups(response.data)\n        })\n    }, [])\n\n    return (\n        <div className=\"App\">\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\n                <a className=\"navbar-brand\" href=\"#\">Navbar</a>\n                <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\"\n                        data-bs-target=\"#navbarNavAltMarkup\" aria-controls=\"navbarNavAltMarkup\"\n                        aria-expanded=\"false\"\n                        aria-label=\"Toggle navigation\">\n                    <span className=\"navbar-toggler-icon\"></span>\n                </button>\n                <div className=\"collapse navbar-collapse\" id=\"navbarNavAltMarkup\">\n                    <div className=\"navbar-nav\">\n                        {groups.map(g => (\n                            <Link className=\"nav-link\"\n                                  to={{pathname: `/api/groups/${g.id}`, fromDashboard: false}}>{g.name}</Link>\n                        ))}\n                    </div>\n                </div>\n            </nav>\n        </div>\n    );\n}\n\nexport default Navbar;\n","import React, {useState, useEffect} from \"react\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Navbar from \"./components/navigation/Navbar\";\nimport { BrowserRouter as Router, Switch, Route } from 'react-dom';\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <Router>\n                <Navbar/>\n            </Router>\n        </div>\n    );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}