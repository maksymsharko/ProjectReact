{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["MyComponent","useState","error","setError","isLoaded","setIsLoaded","users","setUsers","useEffect","fetch","then","res","json","result","message","map","user","id","username","email","created","group","action","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"wMA4DeA,MAxDf,WAEI,MAA0BC,mBAAS,MAAnC,mBAAOC,EAAP,KAAcC,EAAd,KACA,EAAgCF,oBAAS,GAAzC,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAA0BJ,mBAAS,IAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAiBA,OAfAC,qBAAU,WACNC,MAAM,kCACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACGR,GAAY,GACZE,EAASM,EAAOP,UAEpB,SAACJ,GACGG,GAAY,GACZF,EAASD,QAGtB,IAECA,EACO,0CAAaA,EAAMY,WAClBV,EAIJ,kCACI,gCACA,+BACI,oCACA,0CACA,uCACA,yCACA,uCACA,8CAGJ,gCACCE,EAAMS,KAAI,SAAAC,GAAI,OACX,+BACI,6BAAKA,EAAKC,KACV,6BAAKD,EAAKE,WACV,6BAAKF,EAAKG,QACV,6BAAKH,EAAKI,UACV,6BAAKJ,EAAKK,QACV,6BAAKL,EAAKM,WANLN,EAAKC,YAhBnB,8CChBAM,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBf,MAAK,YAAkD,IAA/CgB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.07aed0b9.chunk.js","sourcesContent":["import React, {useEffect, useState} from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nfunction MyComponent() {\n\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [users, setUsers] = useState([]);\n\n    useEffect(() => {\n        fetch(\"http://0.0.0.0:8000/api/users/\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    setIsLoaded(true);\n                    setUsers(result.users);\n                },\n                (error) => {\n                    setIsLoaded(true);\n                    setError(error);\n                }\n            )\n    }, [])\n\n    if (error) {\n        return <div>ERROR: {error.message}</div>;\n    } else if (!isLoaded) {\n        return <div>Loading...</div>;\n    } else {\n        return (\n            <table>\n                <thead>\n                <tr>\n                    <th>ID</th>\n                    <th>Username</th>\n                    <th>Email</th>\n                    <th>Created</th>\n                    <th>Group</th>\n                    <th>Actions</th>\n                </tr>\n                </thead>\n                <tbody>\n                {users.map(user => (\n                    <tr key={user.id}>\n                        <td>{user.id}</td>\n                        <td>{user.username}</td>\n                        <td>{user.email}</td>\n                        <td>{user.created}</td>\n                        <td>{user.group}</td>\n                        <td>{user.action}</td>\n                    </tr>\n\n                ))}\n                </tbody>\n            </table>\n        );\n    }\n}\n\nexport default MyComponent;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}