{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["MyComponent","props","state","error","isLoaded","users","fetch","then","res","json","result","setState","this","message","map","user","id","username","email","created","group","action","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","App","document","getElementById"],"mappings":"8NAuEeA,E,kDAlEX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,MAAO,KACPC,UAAU,EACVC,MAAO,IALI,E,qDASnB,WAAqB,IAAD,OAChBC,MAAM,oCACDC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG,EAAKC,SAAS,CACVP,UAAU,EACVC,MAAOK,EAAOL,WAGtB,SAACF,GACG,EAAKQ,SAAS,CACVP,UAAU,EACVD,e,oBAMpB,WACI,MAAiCS,KAAKV,MAA/BC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,SAAUC,EAAxB,EAAwBA,MACxB,OAAIF,EACO,0CAAaA,EAAMU,WAClBT,EAIJ,kCACI,gCACA,+BACI,oCACA,0CACA,uCACA,yCACA,uCACA,8CAGJ,gCACCC,EAAMS,KAAI,SAAAC,GAAI,OACX,+BACI,6BAAKA,EAAKC,KACV,6BAAKD,EAAKE,WACV,6BAAKF,EAAKG,QACV,6BAAKH,EAAKI,UACV,6BAAKJ,EAAKK,QACV,6BAAKL,EAAKM,WANLN,EAAKC,YAhBnB,iD,GAlCOM,IAAMC,WCQjBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnB,MAAK,YAAkD,IAA/CoB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.c6bee203.chunk.js","sourcesContent":["import React from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css'\n\n\nclass MyComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: null,\n            isLoaded: false,\n            users: []\n        };\n    }\n\n    componentDidMount() {\n        fetch(\"http://localhost:8000/api/users/\")\n            .then(res => res.json())\n            .then(\n                (result) => {\n                    this.setState({\n                        isLoaded: true,\n                        users: result.users\n                    });\n                },\n                (error) => {\n                    this.setState({\n                        isLoaded: true,\n                        error\n                    });\n                }\n            )\n    }\n\n    render() {\n        const {error, isLoaded, users} = this.state;\n        if (error) {\n            return <div>ERROR: {error.message}</div>;\n        } else if (!isLoaded) {\n            return <div>Loading...</div>;\n        } else {\n            return (\n                <table>\n                    <thead>\n                    <tr>\n                        <th>ID</th>\n                        <th>Username</th>\n                        <th>Email</th>\n                        <th>Created</th>\n                        <th>Group</th>\n                        <th>Actions</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {users.map(user => (\n                        <tr key={user.id}>\n                            <td>{user.id}</td>\n                            <td>{user.username}</td>\n                            <td>{user.email}</td>\n                            <td>{user.created}</td>\n                            <td>{user.group}</td>\n                            <td>{user.action}</td>\n                        </tr>\n\n                    ))}\n                    </tbody>\n                </table>\n            );\n        }\n    }\n}\n\nexport default MyComponent;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}